{"version":3,"sources":["components/layout/otheruser.png","components/layout/record.PNG","components/layout/spinner.gif","components/layout/mypost.png","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/auth/Reset.js","components/layout/Alert.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/DashboardActions.js","actions/post.js","components/dashboard/PostDisplay.js","components/dashboard/MyPosts.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/dashboard/UploadImages.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentItem.js","components/post/CommentForm.js","components/post/Post.js","components/layout/NotFound.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","alert","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","errors","response","forEach","error","connect","state","auth","logout","isAuthenticated","user","loading","authLinks","to","className","onClick","href","guestLinks","style","fontFamily","register","name","email","password","config","body","JSON","stringify","post","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","placeholder","required","minLength","login","resetPswd","alerts","length","map","key","getCurrentProfile","statusText","status","createProfile","history","edit","push","src","Spinner","width","margin","display","alt","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","ClassName","deleteEducation","education","educations","edu","school","degree","DashboardActions","deletePost","myposts","text","date","likes","comments","avatar","picture","showLikes","toggleLikes","userid","marginTop","mypost","marginLeft","marginBottom","like","height","borderWidth","padding","other","my","getMyPost","useEffect","profile","deleteAccount","window","confirm","images","color","border","borderColor","Component","component","rest","render","props","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","current","description","setformData","toDateDisabled","toggleDisabled","class","checked","disabled","cols","rows","addEducation","fieldofstudy","uploadAvatar","images1","myWidget1","cloudinary","createUploadWidget","cloudName","uploadPreset","cropping","result","event","info","secure_url","open","ProfileItem","slice","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","skill","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","showActions","defaultProps","put","addPost","setText","getPosts","posts","removeComment","postid","commentid","postId","comment","addComment","getPost","NotFound","Routes","exact","path","Register","Login","Reset","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","UploadImages","Posts","Post","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.44d356d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/otheruser.2c72daad.png\";","module.exports = __webpack_public_path__ + \"static/media/record.043e7b4f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/spinner.58e4a4e4.gif\";","module.exports = __webpack_public_path__ + \"static/media/mypost.70e1c02b.png\";","import { v4 as uuid } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n\r\nexport default alert;\r\n","//variables declared\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POSTS = 'DELETE_POSTS';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\nexport const GET_POST = 'GET_POST';\r\nexport const GETMY_POSTS = 'GETMY_POSTS';\r\nexport const PERSONAL_POSTS = 'PERSONAL_POSTS';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\n\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register user\r\n\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login user\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Reset password\r\nexport const resetPswd = ({ email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users/reset', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n  dispatch({ type: CLEAR_PROFILE });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = ({ auth: { user, isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />{' '}\r\n          <span className='hide-sm'> My Account</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout </span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/' style={{ fontFamily: `'Lobster Two', cursive` }}>\r\n          <i className='fas fa-code'></i> Let'sConnect\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment> {isAuthenticated ? authLinks : guestLinks} </Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard'></Redirect>;\r\n  }\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large' style={{ fontFamily: `'Lobster Two', cursive` }}>Let's Connect</h1>\r\n          <p className='lead' style={{ fontFamily: `'Lobster Two', cursive` }}>\r\n            With Each Other....\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n      console.log('SUCCESS');\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard'></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard'></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n        <p>\r\n          Forgot Password? <Link to='/reset'>Click here</Link>\r\n        </p>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { resetPswd } from '../../actions/auth';\r\nimport { setAlert } from '../../actions/alert';\r\n\r\nconst Reset = ({ resetPswd, setAlert, auth: { isAuthenticated } }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      resetPswd({ email, password });\r\n      console.log('SUCCESS');\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard'></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Reset Password</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create New Password\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Submit' />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nReset.propTypes = {\r\n  resetPswd: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { resetPswd, setAlert })(Reset);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  // SET_IMG,\r\n  // GET_IMG,\r\n  // IMG_ERROR,\r\n} from './types';\r\n\r\n//Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n\r\n//get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//get by id profiles:\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//get github repos\r\n\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// create-Update a profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json ',\r\n      },\r\n    };\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile/experience', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('./dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Experience\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile/education', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('./dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education deleted', 'success'));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience deleted', 'success'));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//delete account and profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!!')) {\r\n    try {\r\n      await axios.delete('api/profile');\r\n\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n      dispatch({ type: CLEAR_PROFILE });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {\r\n          msg: err.response.statusText,\r\n          status: err.response.status,\r\n        },\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Send the url of uploaded avatar (to Cloudinary) to MongoDB.\r\nexport const uploadAvatar = (images, history) => async dispatch => {\r\n  try {\r\n    console.log('action');\r\n    console.log('images', images);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const res = await axios.post('/api/profile/avatar', images, config);\r\n    // console.log('status: ', res.status);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert('Avatar Picture Updated', 'success'));\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport Spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={Spinner}\r\n      style={{ width: `200px`, margin: `auto`, display: `block` }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment>-{' '}\r\n        {exp.to === null ? (\r\n          'Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          DELETE\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th ClassName='hide-sm'>Title</th>\r\n            <th ClassName='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment>-{' '}\r\n        {edu.to === null ? (\r\n          'Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          DELETE\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th ClassName='hide-sm'>Degree</th>\r\n            <th ClassName='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  GETMY_POSTS,\r\n  PERSONAL_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\n//Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//get posts by user id\r\nexport const getUserPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/mypost/${id}`);\r\n    dispatch({\r\n      type: GETMY_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//get posts by user id\r\nexport const getMyPost = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts/posted');\r\n    dispatch({\r\n      type: PERSONAL_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Get post by  id\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add posts\r\nexport const addPost = (text) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'Application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/posts', text, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add likes\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n//Remove likes\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Comments\r\nexport const addComment = (postid, text) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'Application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/posts/comment/${postid}`, text, config);\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Remove Comments\r\nexport const removeComment = (postid, commentid) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postid}/${commentid}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentid,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete posts\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: DELETE_POSTS,\r\n      payload: id,\r\n    });\r\n    dispatch(setAlert('Post removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { deletePost } from '../../actions/post';\r\nimport mypost from '../layout/mypost.png';\r\nimport other from '../layout/otheruser.png';\r\nimport my from '../layout/record.PNG';\r\nconst PostDisplay = ({\r\n  myposts: { _id, text, date, likes, user, avatar, picture, comments },\r\n  auth,\r\n  deletePost\r\n}) => {\r\n\r\n  const [showLikes, toggleLikes] = useState(false);\r\n\r\n  const userid = auth.user._id;\r\n\r\n  return (\r\n\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${userid}`}>\r\n          <img style={{ marginTop: '40px' }} src={mypost} alt='' />\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1 mytext'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        <button onClick={e => toggleLikes(!showLikes)} type='button'\r\n          className='btn btn-light'>\r\n          <p>\r\n            <i className='fas fa-thumbs-up'></i>\r\n            {'      '}\r\n            {likes.length > 0 && <span>{likes.length}</span>}{' '}\r\n          </p>\r\n        </button>\r\n\r\n        <Link\r\n          style={{ marginLeft: '10px' }}\r\n          className='btn btn-primary'\r\n          to={`/posts/${_id}`}\r\n        >\r\n          {' '}\r\n          Discussion{' '}\r\n          {comments.length > 0 && (\r\n            <span className='comment-count'>{comments.length}</span>\r\n          )}\r\n        </Link>\r\n        {' '}\r\n        <button\r\n          onClick={(e) => deletePost(_id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times'></i>\r\n        </button>\r\n      </div>\r\n      <div >\r\n        {showLikes && <Fragment>\r\n          <p style={{ marginBottom: '6px' }}>Liked By </p>\r\n          {likes.map(like => (<div className='post bg-white p-1 my-1' style={{\r\n            width: '284px',\r\n            height: '55px',\r\n            borderWidth: '0px 0px 1px 0px',\r\n            margin: '0px 0px 0px 0px',\r\n            padding: '3px'\r\n          }} >\r\n            <div>\r\n              <Link to={`/profile/${like.user}`}>\r\n                {!auth.loading && like.user === auth.user._id ? <img className='round-img' style={{ width: \"45px\" }} src={my} alt='' /> :\r\n                  <img className='round-img' style={{ width: \"45px\" }} src={other} alt='' />}\r\n                {/* <img className='round-img' style={{ width: \"45px\" }} src={like.picture === '' ? like.avatar : like.picture} alt='' />\r\n               */}\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <p className='my-1 '>{like.name} {' '} </p>\r\n\r\n            </div>\r\n          </div>))}\r\n        </Fragment>}\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nPostDisplay.propTypes = {\r\n  myposts: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deletePost })(PostDisplay);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMyPost } from \"../../actions/post\";\r\nimport PostDisplay from \"./PostDisplay\";\r\n\r\n\r\nconst MyPosts = ({\r\n    auth: { token, loading },\r\n    myposts,\r\n    getMyPost\r\n}) => {\r\n\r\n    useEffect(() => { getMyPost() }, [getMyPost]);\r\n\r\n\r\n\r\n    return token ? (\r\n        loading ? (\r\n            <Spinner />\r\n        ) : (\r\n                <Fragment>\r\n                    <h2 className='my-2' >\r\n                        My Posts\r\n                    </h2>\r\n\r\n                    <div>\r\n                        {myposts.map(mypost => (\r\n                            <PostDisplay key={mypost._id} myposts={mypost} />\r\n                        ))}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n    ) : (\r\n            <Redirect to='/login'></Redirect>\r\n        );\r\n};\r\n\r\nMyPosts.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    myposts: PropTypes.array.isRequired,\r\n    getMyPost: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    myposts: state.post.myposts\r\n});\r\n\r\nexport default connect(mapStateToProps, { getMyPost })(MyPosts);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport DashboardActions from './DashboardActions';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst Dashboard = ({\r\n  auth: { token, user },\r\n  getCurrentProfile,\r\n  profile: { profile, loading },\r\n  deleteAccount,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n\r\n  return token ? (loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n      <Fragment>\r\n        <div className='profile-top bg-primary p-2' className='box'>\r\n          <div className='my-1'>\r\n            {' '}\r\n\r\n            {profile === null && <img className='round-img' className='imgb' src={user && user.avatar} alt='' />}\r\n            {profile !== null && <img className='round-img' className='imgb' src={profile.images.picture && profile.images.picture} alt='' />}\r\n\r\n          </div>\r\n          <div>\r\n            {' '}\r\n            <p className='lead' style={{ color: 'white' }}>\r\n              <b> Welcome, {user && user.name}</b>\r\n            </p>\r\n          </div>\r\n          {profile !== null && <p>\r\n\r\n            <Link className='ava-style' style={{ color: \"white\", border: \"1px solid\", borderColor: \"white\", padding: '5px' }} to='/upload-images'>\r\n              Add avatar\r\n</Link>\r\n\r\n          </p>}\r\n\r\n        </div>\r\n\r\n        {profile !== null ? (\r\n          <Fragment>\r\n            <DashboardActions />\r\n            <MyPosts></MyPosts>\r\n            <Experience experience={profile.experience}></Experience>\r\n            <Education education={profile.education}></Education>\r\n\r\n            <div className='my-2'>\r\n              <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                <i className='fas fa-user-minus'></i>\r\n                Delete My Account\r\n            </button>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n            <Fragment>\r\n              <p>You have not yet setup a profile , Please add some info</p>\r\n              <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                Create profile\r\n          </Link>\r\n              <div className='my-2'>\r\n                <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                  <i className='fas fa-user-minus'></i>\r\n                  Delete My Account\r\n            </button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n      </Fragment>\r\n    )) : (\r\n      <Redirect to='/login'></Redirect>\r\n    );\r\n\r\n\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  history,\r\n  getCurrentProfile,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n\r\n      website: loading || !profile.website ? '' : profile.website,\r\n\r\n      location: loading || !profile.location ? '' : profile.location,\r\n\r\n      status: loading || !profile.status ? '' : profile.status,\r\n\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n\r\n\r\n        <div className='form-group'>\r\n\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setformData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addExperience(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {' '}\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setformData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Date\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link class='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setformData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addEducation(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-graduation-cap'></i> Add any school, bootcamp, etc\r\n        that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field Of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setformData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current School or Bootcamp\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { uploadAvatar } from '../../actions/profile';\r\n\r\nconst UploadImages = ({ uploadAvatar, history }) => {\r\n    let images1 = { picture: '' };\r\n    let myWidget1 = window.cloudinary.createUploadWidget(\r\n        {\r\n            cloudName: 'vmdc',\r\n            uploadPreset: 'dev-connect',\r\n            cropping: 'server'\r\n        },\r\n        (error, result) => {\r\n            if (!error && result && result.event === 'success') {\r\n                //console.log('result: ', result);\r\n                images1.picture = result.info.secure_url;\r\n                uploadAvatar(images1, history);\r\n            }\r\n        }\r\n    );\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Upload Avatar</h1>{' '}\r\n            <p className='lead'>For best results, crop image into a square.</p>\r\n            <button\r\n                className='btn btn-primary my-1'\r\n                onClick={() => {\r\n                    myWidget1.open();\r\n                }}\r\n            >\r\n                Upload Avatar\r\n      </button>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nUploadImages.propTypes = {\r\n    uploadAvatar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    {\r\n        uploadAvatar\r\n    }\r\n)(withRouter(UploadImages));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    images: { picture },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={picture === '' ? avatar : picture} alt='' className='round-img'></img>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <span>\r\n          {status} {company && <span> at {company}</span>}\r\n        </span>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skills, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check'></i>\r\n            {skills}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n          <Fragment>\r\n            <h1 className='large text-primary'>Developers</h1>\r\n            <p className='lead'>\r\n              <i className='fab fa-connectdevelop' /> Browse and connect with\r\n              developers\r\n          </p>\r\n            <div className='profiles'>\r\n              {profiles.length > 0 ? (\r\n                profiles.map((profile) => (\r\n                  <ProfileItem key={profile._id} profile={profile} />\r\n                ))\r\n              ) : (\r\n                  <h4>No profiles found.....</h4>\r\n                )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    images: { picture },\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n\r\n      <img className='round-img my-1' src={picture === '' ? avatar : picture} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span>at {company}</span>}\r\n      </p>\r\n      <p>{location}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <Link to={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x'></i>\r\n          </Link>\r\n        )}\r\n        {social && social.twitter && (\r\n          <Link to={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x'></i>\r\n          </Link>\r\n        )}\r\n        {social && social.facebook && (\r\n          <Link to={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x'></i>\r\n          </Link>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <Link to={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x'></i>\r\n          </Link>\r\n        )}\r\n        {social && social.youtube && (\r\n          <Link to={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x'></i>\r\n          </Link>\r\n        )}\r\n        {social && social.instagram && (\r\n          <Link to={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x'></i>\r\n          </Link>\r\n        )}\r\n        {/* \r\n        <p>\r\n\r\n          <Link to='/upload-images' className='btn btn-dark'>\r\n            Add or update avatar\r\n                </Link>\r\n\r\n        </p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className='line'></div>\r\n      </Fragment>\r\n    )}\r\n\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check'>{skill}</i>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n    <div>\r\n      <h3 className='text-dark'>Company: {company}</h3>\r\n      <p>\r\n        <strong>Duration: </strong>\r\n        <Moment format='YYYY/MM/DD'>{from}</Moment>-{' '}\r\n        {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Position: </strong>\r\n        {title}\r\n      </p>\r\n      <p>\r\n        <strong>Description: </strong>\r\n        {description}\r\n      </p>\r\n    </div>\r\n  );\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n    <div>\r\n      <h3 className='text-dark'>School/College: {school}</h3>\r\n      <p>\r\n        <strong>Degree: {degree}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Duration: </strong>\r\n        <Moment format='YYYY/MM/DD'>{from}</Moment>-{' '}\r\n        {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Stream: </strong>\r\n        {fieldofstudy}\r\n      </p>\r\n      <p>\r\n        <strong>Description: </strong>\r\n        {description}\r\n      </p>\r\n    </div>\r\n  );\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>\r\n        <i className='fab fa-github'></i> Github Repos\r\n      </h2>\r\n      {repos === null ? (\r\n        <Spinner></Spinner>\r\n      ) : (\r\n          repos.map((repo) => (\r\n            <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n              <div className='repo bg-white p-1 my-1'>\r\n                <div>\r\n                  <h4>\r\n                    <a\r\n                      href={repo.html_url}\r\n                      target='_blank'\r\n                      rel='noopener noreferrer'\r\n                    >\r\n                      {repo.name}\r\n                    </a>\r\n                  </h4>\r\n                  <p>{repo.description}</p>\r\n                </div>\r\n                <div>\r\n                  <ul>\r\n                    <li className='badge badge-primary'>\r\n                      Stars: {repo.stargazers_count}\r\n                    </li>\r\n                    <li className='badge badge-dark'>\r\n                      Watchers: {repo.watchers_count}\r\n                    </li>\r\n                    <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  githubusername: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner></Spinner>\r\n      ) : (\r\n          <Fragment>\r\n            <Link to='/profiles' className='btn btn-light'>\r\n              Back to profiles\r\n          </Link>\r\n            {auth.isAuthenticated &&\r\n              auth.loading === false &&\r\n              auth.user._id === profile.user._id && (\r\n                <Link to='/edit-profile' className='btn btn-dark'>\r\n                  Edit profile\r\n              </Link>\r\n              )}\r\n            <div className='profile-grid my-1'>\r\n              <ProfileTop profile={profile} />\r\n              <ProfileAbout profile={profile} />\r\n              <div className='profile-exp bg-white p-2'>\r\n                <h2 className='text-primary'>Experience</h2>\r\n                {profile.experience.length > 0 ? (\r\n                  <Fragment>\r\n                    {profile.experience.map((experience) => (\r\n                      <ProfileExperience\r\n                        key={experience._id}\r\n                        experience={experience}\r\n                      />\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                    <h4>No experience credentials</h4>\r\n                  )}\r\n              </div>\r\n              <div className='profile-edu bg-white p-2'>\r\n                <h2 className='text-primary'>Education</h2>\r\n                {profile.education.length > 0 ? (\r\n                  <Fragment>\r\n                    {profile.education.map((education) => (\r\n                      <ProfileEducation\r\n                        key={education._id}\r\n                        education={education}\r\n                      />\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                    <h4>No education credentials</h4>\r\n                  )}\r\n              </div>\r\n              {profile.githubusername && (\r\n                <ProfileGithub username={profile.githubusername} />\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\nimport other from '../layout/otheruser.png';\r\nimport my from '../layout/record.PNG';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, picture, user, likes, comments, date },\r\n  profile: { profile },\r\n  showActions,\r\n}) => {\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          {!auth.loading && user === auth.user._id ? <img className='round-img' src={my} alt='' /> :\r\n            <img className='round-img' src={other} alt='' />}\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1 mytext'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              onClick={(e) => addLike(_id)}\r\n              type='button'\r\n              className='btn btn-light'\r\n            >\r\n              <i className='fas fa-thumbs-up'></i>{' '}\r\n              {likes.length > 0 && <span>{likes.length}</span>}\r\n            </button>\r\n            <button\r\n              onClick={(e) => removeLike(_id)}\r\n              type='button'\r\n              className='btn btn-light'\r\n            >\r\n              <i className='fas fa-thumbs-down'></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n              Discussion{' '}\r\n              {comments.length > 0 && (\r\n                <span className='comment-count'>{comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={(e) => deletePost(_id)}\r\n                type='button'\r\n                className='btn btn-danger'\r\n              >\r\n                <i className='fas fa-times'></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.auth\r\n});\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(' ');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getPosts } from '../../actions/post';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\n\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading === true ? (\r\n        <Spinner></Spinner>\r\n      ) : (\r\n          <Fragment>\r\n            <h1 className='large text-primary'>Posts</h1>\r\n            <p className='lead'>\r\n              <i className='fas fa-user'></i> Welcome to the community!\r\n          </p>\r\n\r\n            <PostForm />\r\n\r\n            <div className='posts'>\r\n              {posts.map((post) => (\r\n                <PostItem key={post._id} post={post}></PostItem>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeComment } from '../../actions/post';\r\nimport other from '../layout/otheruser.png';\r\nimport my from '../layout/record.PNG';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, avatar, picture, name, text, date, user },\r\n  auth,\r\n  removeComment,\r\n}) => {\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          {!auth.loading && user === auth.user._id ? <img className='round-img' src={my} alt='' /> :\r\n            <img className='round-img' src={other} alt='' />}\r\n          {/* <img className='round-img' src={picture === '' ? avatar : picture} alt='' />\r\n          */}\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        <div>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={(e) => removeComment(postId, _id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  removeComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { removeComment })(CommentItem);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ addComment, postId }) => {\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(' ');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a comment'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getPost } from '../../actions/post';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentItem from '../post/CommentItem';\r\nimport CommentForm from '../post/CommentForm';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner></Spinner>\r\n  ) : (\r\n      <Fragment>\r\n        <Link to='/posts' className='btn btn-primary'>\r\n          Back to posts\r\n      </Link>\r\n\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n\r\n        {post.comments.map((comment) => (\r\n          <CommentItem\r\n            key={comment._id}\r\n            comment={comment}\r\n            postId={post._id}\r\n          ></CommentItem>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1 className='x-large text-primary'>\r\n                <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n            <p className='large'>Sorry, this page does not exist</p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Reset from '../auth/Reset';\r\nimport Alert from '../layout/Alert';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport CreateProfile from '../profile-forms/CreateProfile';\r\nimport EditProfile from '../profile-forms/EditProfile';\r\nimport AddExperience from '../profile-forms/AddExperience';\r\nimport AddEducation from '../profile-forms/AddEducation';\r\nimport UploadImages from '../dashboard/UploadImages';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport NotFound from '../layout/NotFound';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <section className='container'>\r\n            <Alert />\r\n            <Switch>\r\n                <Route exact path='/register' component={Register} />\r\n                <Route exact path='/login' component={Login} />\r\n                <Route exact path='/reset' component={Reset} />\r\n\r\n                <Route exact path='/profiles' component={Profiles} />\r\n                <Route exact path='/profile/:id' component={Profile} />\r\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/create-profile'\r\n                    component={CreateProfile}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/edit-profile'\r\n                    component={EditProfile}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/add-experience'\r\n                    component={AddExperience}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/add-education'\r\n                    component={AddEducation}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/upload-images'\r\n                    component={UploadImages}>\r\n                </PrivateRoute>\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/posts'\r\n                    component={Posts}\r\n                ></PrivateRoute>\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/posts/:id'\r\n                    component={Post}\r\n                ></PrivateRoute>\r\n                <Route component={NotFound}></Route>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  GETMY_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n  PERSONAL_POSTS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  myposts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case PERSONAL_POSTS:\r\n    case GETMY_POSTS:\r\n      return {\r\n        ...state,\r\n        myposts: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        myposts: state.myposts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n//redux\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes}></Route>\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}